name: IaC template

on:
  workflow_call:
    inputs:
      environment: # GitHub environment
        type: string
        default: sandbox
        required: true
      action: # Terraform apply or destroy
        type: string
        default: apply

env:
  ARM_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.TENANT_ID }}
  ARM_CLIENT_ID: ${{ secrets.CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
  APP_NAME: "BLUEHYDROGENABACUS"
  ENVIRONMENT: "SBX"
  PROJECT: "DSOPS"
  REGION_SHORT: "EU"
  APP_SUFFIX: "001"

jobs:
# Create all base resources
  base-infra:
   name: ${{ github.event.inputs.action }} base infra
   runs-on: ubuntu-latest
   environment: ${{ github.event.inputs.gh-env }}
   concurrency:
    group: ${{ github.event.inputs.gh-env }}
    cancel-in-progress: false
   defaults:
     run:
       working-directory: terraform/base
   
   steps:
    - name: Checkout repo
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1.2.1
      with:
        terraform_wrapper: false

    - name: Git setup
      run: |
        git config --local --remove-section http."https://github.com/"
        git config --global url."https://foo:${{ env.GH_TOKEN }}@github.com/iveylabs".insteadOf "https://github.com/iveylabs"
      env:
        GH_TOKEN: ${{ secrets.PAT_PUBLIC_REPO }}

    - name: Terraform init
      run: terraform init

    - name: Terraform plan
      run: terraform plan -out="tfplan.bin" -var-file="${{ github.event.inputs.gh-env }}.tfvars" -input=false
      if: ${{ github.event.inputs.action == 'apply' }}

    # Apply if that was the selected option
    - name: Terraform apply
      run: terraform apply -input=false -auto-approve "tfplan.bin"
      if: ${{ github.event.inputs.action == 'apply' }}
      
    # Destroy if that was the selected option
    - name: Terraform destroy
      run: terraform destroy -input=false -auto-approve -var-file="${{ github.event.inputs.gh-env }}.tfvars"
      if: ${{ github.event.inputs.action == 'destroy' }}

# Exclude from subscription/management group tagging policy
  policy-exclude:
    name: Azure policy exclusion
    needs: base-infra
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.action == 'apply' }}
    concurrency:
      group: ${{ github.event.inputs.gh-env }}
      cancel-in-progress: false
    steps:
      - name: Azure Login
        uses: Azure/login@v1.4.3
        with:
          creds: ${{ secrets.AZURE_CREDS }}
          enable-AzPSSession: true

      - name: Exclude RG from sub tagging policy
        uses: Azure/powershell@v1
        with:
          inlineScript: |
            # Get current notScopes list
            $currentNotScopes = (Get-AzPolicyAssignment -Name "${{ secrets.AZ_POLICY_ASSIGNMENT_NAME }}").Properties.NotScopes
            # Add new RG to NotScopes of assignment, if not already excluded
            if(!$currentNotScopes.Contains("/subscriptions/${{ secrets.SUBSCRIPTION_ID }}/resourceGroups/RG-${{ env.ENVIRONMENT }}-${{ env.PROJECT }}-${{ env.REGION_SHORT }}-${{ env.APP_NAME }}-${{ env.APP_SUFFIX }}")) {
              $newNotScopes = $currentNotScopes + "/subscriptions/${{ secrets.SUBSCRIPTION_ID }}/resourceGroups/RG-${{ env.ENVIRONMENT }}-${{ env.PROJECT }}-${{ env.REGION_SHORT }}-${{ env.APP_NAME }}-${{ env.APP_SUFFIX }}"
              # Modify assignment with new NotScopes
              Set-AzPolicyAssignment -Name "${{ secrets.AZ_POLICY_ASSIGNMENT_NAME }}" -NotScope $newNotScopes
            }
            else {
              Write-Host "Resource group already excluded. No change required."
            }
          azPSVersion: latest

# Create resource group level tagging policy
  rg-policy:
   name: Create RG policy assignment
   runs-on: ubuntu-latest
   needs: policy-exclude
   environment: ${{ github.event.inputs.gh-env }}
   if: ${{ github.event.inputs.action == 'apply' }}
   concurrency:
    group: ${{ github.event.inputs.gh-env }}
    cancel-in-progress: false
   defaults:
     run:
       working-directory: terraform/policy
   
   steps:    
    - name: Checkout repo
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1.2.1
      with:
        terraform_wrapper: false

    - name: Git setup
      run: |
        git config --local --remove-section http."https://github.com/"
        git config --global url."https://foo:${{ env.GH_TOKEN }}@github.com/iveylabs".insteadOf "https://github.com/iveylabs"
      env:
        GH_TOKEN: ${{ secrets.PAT_PUBLIC_REPO }}
        
    - name: Terraform init
      run: terraform init

    - name: Terraform plan
      run: terraform plan -out="tfplan.bin" -var-file="${{ github.event.inputs.gh-env }}.tfvars" -input=false

    # Apply if that was the selected option
    - name: Terraform apply
      run: terraform apply -input=false -auto-approve "tfplan.bin"
