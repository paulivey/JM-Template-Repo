# This is an example workflow to show how you can automatically run the workflow for new repos after their creation
name: Example first run workflow

on:
  workflow_dispatch:
    inputs:
#       # Setting all types as text to avoid potential complications when running via CLI
#       GH_ENVIRONMENT:
#         type: text
#         default: SBX
#       TERRAFORM_ACTION:
#         type: text
#         default: apply
#       UPN:
#         description: Contributor login email address
#         type: text
#         required: false
#       APP_NAME:
#         type: text
#       APP_PROJECT:
#         type: text
#       APP_LOCATION:
#         type: text
#       APP_REGION_SHORT:
#         type: text
#       APP_SUFFIX:
#         type: text
#       TAG_COUNTRY:
#         type: text
#       TAG_ENVIRONMENT:
#         type: text
#       TAG_MAINT_WINDOW:
#         type: text
#       TAG_SECTOR:
#         type: text
#       TAG_COST_CENTER:
#         type: text
#       TAG_APP_OWNER:
#         type: text
#       TAG_CLASSIFICATION:
#         type: text
#       TAG_SERVICE_CLASS:
#         type: text
      JSON:
        type: text

jobs:  
  # MAKE SURE YOU CHANGE THE PATH!
  infra:
    runs-on: ubuntu-latest
    steps:
      - name: Test JSON inputs
        run: |
          Write-Host "GH environment:"
          Write-Host "${{ toJson(github.event.inputs.JSON)}}"
        shell: pwsh
#     name: Infra
#     # CHANGE THIS PATH!
#     uses: iveylabs/JM-Infra-Central/.github/workflows/infra-template.yml@main
#     with:
#       GH_ENVIRONMENT: ${{ github.event.inputs.GH_ENVIRONMENT }}
#       TERRAFORM_ACTION: ${{ github.event.inputs.TERRAFORM_ACTION }}
#       UPN: ${{ github.event.inputs.UPN }}
#       APP_NAME: ${{ github.event.inputs.APP_NAME }}
#       APP_PROJECT: ${{ github.event.inputs.APP_PROJECT }}
#       APP_LOCATION: ${{ github.event.inputs.APP_LOCATION }}
#       APP_REGION_SHORT: ${{ github.event.inputs.APP_REGION_SHORT }}
#       APP_SUFFIX: ${{ github.event.inputs.APP_SUFFIX }}
#       TAG_COUNTRY: ${{ github.event.inputs.TAG_COUNTRY }}
#       TAG_ENVIRONMENT: ${{ github.event.inputs.TAG_ENVIRONMENT }}
#       TAG_MAINT_WINDOW: ${{ github.event.inputs.TAG_MAINT_WINDOW }}
#       TAG_SECTOR: ${{ github.event.inputs.TAG_SECTOR }}
#       TAG_COST_CENTER: ${{ github.event.inputs.TAG_COST_CENTER }}
#       TAG_APP_OWNER: ${{ github.event.inputs.TAG_APP_OWNER }}
#       TAG_CLASSIFICATION: ${{ github.event.inputs.TAG_CLASSIFICATION }}
#       TAG_SERVICE_CLASS: ${{ github.event.inputs.TAG_SERVICE_CLASS }}
#     secrets:
#       SUB_POLICY_ASSIGNMENT_NAME: ${{ secrets.SUB_POLICY_ASSIGNMENT_NAME }}
#       RG_POLICY_DEFINITION_ID: ${{ secrets.RG_POLICY_DEFINITION_ID }}
#       ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
#       ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
#       ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
#       ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
#       AZURE_CREDS: ${{ secrets.AZURE_CREDS }}
#       GH_PAT: ${{ secrets.GH_PAT }}
