name: Test IaC

on:
  workflow_dispatch:
    inputs:
      action:
        type: choice
        options:
          - Apply
          - Destroy
        description: Apply or destroy?
        default: Apply

env:
  ARM_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.TENANT_ID }}
  ARM_CLIENT_ID: ${{ secrets.CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
  APP_NAME: "BLUEHYDROGENABACUS"
  ENVIRONMENT: "SBX"
  PROJECT: "DSOPS"
  REGION_SHORT: "EU"
  APP_SUFFIX: "001"

jobs:
# Create all base resources
  base-infra:
   name: Base infra
   runs-on: ubuntu-latest
   environment: sandbox
#   defaults:
#     run:
#       working-directory: terraform/base
   
   steps:
    - name: Dump GitHub context
      id: github_context_step
      run: echo '${{ toJSON(github) }}'
    - name: Dump jobs context
      run: echo '${{ toJSON(jobs.base-infra.environment) }}'
    - name: Dump steps context
      run: echo '${{ toJSON(steps) }}'
    - name: Dump runner context
      run: echo '${{ toJSON(runner) }}'
    - name: Dump strategy context
      run: echo '${{ toJSON(strategy) }}'
    - name: Dump matrix context
      run: echo '${{ toJSON(matrix) }}'
#    - name: Checkout repo
#      uses: actions/checkout@v2
#
#    - name: Setup Terraform
#      uses: hashicorp/setup-terraform@v1.2.1
#      with:
#        terraform_wrapper: false
#
#    - name: Git setup
#      run: |
#        git config --local --remove-section http."https://github.com/"
#        git config --global url."https://foo:${{ env.GH_TOKEN }}@github.com/iveylabs".insteadOf "https://github.com/iveylabs"
#      env:
#        GH_TOKEN: ${{ secrets.PAT_PUBLIC_REPO }}
#
#    - name: Terraform init
#      run: terraform init
#
#    - name: Terraform plan
#      run: terraform plan -out="tfplan.bin" -var-file="${{github.jobs.base-infra.environment}}.tfvars" -input=false
#
#    # Apply if that was the selected option
#    - name: Terraform apply
#      run: terraform apply -var-file="${{github.job.environment}}.tfvars" -input=false -auto-approve
#      if: ${{ github.event.inputs.action == 'Apply' }}
#      
#    # Destroy if that was the selected option
#    - name: Terraform destroy
#      run: terraform destroy -var-file="${{github.job.environment}}.tfvars" -input=false -auto-approve
#      if: ${{ github.event.inputs.action == 'Destroy' }}
#
## Exclude from subscription/management group tagging policy
#  policy-exclude:
#    name: Azure policy exclusion
#    needs: base-infra
#    runs-on: ubuntu-latest
#    if: ${{ github.event.inputs.action == 'Apply' }}
#    steps:
#      - name: Azure Login
#        uses: Azure/login@v1.4.3
#        with:
#          creds: ${{ secrets.AZURE_CREDS }}
#          enable-AzPSSession: true
#
#      - name: Exclude RG from sub tagging policy
#        uses: Azure/powershell@v1
#        with:
#          inlineScript: |
#            # Get current notScopes list
#            $currentNotScopes = (Get-AzPolicyAssignment -Name "${{ secrets.AZ_POLICY_ASSIGNMENT_NAME }}").Properties.NotScopes
#            # Add new RG to NotScopes of assignment
#            $newNotScopes = $currentNotScopes + "/subscriptions/${{ secrets.SUBSCRIPTION_ID }}/resourceGroups/RG-${{ env.ENVIRONMENT }}-${{ env.PROJECT }}-${{ env.REGION_SHORT }}-${{ env.APP_NAME }}-${{ env.APP_SUFFIX }}"
#            # Modify assignment with new NotScopes
#            Set-AzPolicyAssignment -Name "${{ secrets.AZ_POLICY_ASSIGNMENT_NAME }}" -NotScope $newNotScopes
#          azPSVersion: latest
#
## Create resource group level tagging policy
#  rg-policy:
#   name: Deploy RG policy
#   runs-on: ubuntu-latest
#   needs: policy-exclude
#   defaults:
#     run:
#       working-directory: terraform/policy
#   
#   steps:    
#    - name: Checkout repo
#      uses: actions/checkout@v2
#
#    - name: Setup Terraform
#      uses: hashicorp/setup-terraform@v1.2.1
#      with:
#        terraform_wrapper: false
#
#    - name: Git setup
#      run: |
#        git config --local --remove-section http."https://github.com/"
#        git config --global url."https://foo:${{ env.GH_TOKEN }}@github.com/iveylabs".insteadOf "https://github.com/iveylabs"
#      env:
#        GH_TOKEN: ${{ secrets.PAT_PUBLIC_REPO }}
#        
#    - name: Terraform init
#      run: terraform init
#
#    - name: Terraform plan
#      run: terraform plan -out="tfplan.bin" -var-file="${{github.job.environment}}.tfvars" -input=false
#
#    # Apply if that was the selected option
#    - name: Terraform apply
#      run: terraform apply -var-file="${{github.job.environment}}.tfvars" -input=false -auto-approve
#      if: ${{ github.event.inputs.action == 'Apply' }}
#      
#    # Destroy if that was the selected option
#    - name: Terraform destroy
#      run: terraform destroy -var-file="${{github.job.environment}}.tfvars" -input=false -auto-approve
#      if: ${{ github.event.inputs.action == 'Destroy' }}
